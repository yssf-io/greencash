{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aUnderlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aavePoolProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_offsetHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_carbonToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyProcessed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroValue",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aUnderlying",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aavePoolProvider",
      "outputs": [
        {
          "internalType": "contract AavePoolProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyCarbonCredits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "carbonToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "counters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "number",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toucan",
      "outputs": [
        {
          "internalType": "contract OffsetHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "transferWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162001e5738038062001e57833981016040819052620000359162000263565b86866003620000458382620003b9565b506004620000548282620003b9565b5050506001600160a01b03858116608081905285821660a05284821660c081905284831660e052600680546001600160a01b031916938516939093179092556040805163026b1d5f60e01b81529051919263095ea7b392909163026b1d5f9160048083019260209291908290030181865afa158015620000d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fe919062000485565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156200014d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001739190620004aa565b5050505050505050620004ce565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a957600080fd5b81516001600160401b0380821115620001c657620001c662000181565b604051601f8301601f19908116603f01168101908282118183101715620001f157620001f162000181565b816040528381526020925086838588010111156200020e57600080fd5b600091505b8382101562000232578582018301518183018401529082019062000213565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025e57600080fd5b919050565b600080600080600080600060e0888a0312156200027f57600080fd5b87516001600160401b03808211156200029757600080fd5b620002a58b838c0162000197565b985060208a0151915080821115620002bc57600080fd5b50620002cb8a828b0162000197565b965050620002dc6040890162000246565b9450620002ec6060890162000246565b9350620002fc6080890162000246565b92506200030c60a0890162000246565b91506200031c60c0890162000246565b905092959891949750929550565b600181811c908216806200033f57607f821691505b6020821081036200036057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003b457600081815260208120601f850160051c810160208610156200038f5750805b601f850160051c820191505b81811015620003b0578281556001016200039b565b5050505b505050565b81516001600160401b03811115620003d557620003d562000181565b620003ed81620003e684546200032a565b8462000366565b602080601f8311600181146200042557600084156200040c5750858301515b600019600386901b1c1916600185901b178555620003b0565b600085815260208120601f198616915b82811015620004565788860151825594840194600190910190840162000435565b5085821015620004755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200049857600080fd5b620004a38262000246565b9392505050565b600060208284031215620004bd57600080fd5b81518015158114620004a357600080fd5b60805160a05160c05160e051611910620005476000396000818161018d01526109970152600081816101cc01528181610e87015261107e01526000818161024f01526108be0152600081816102760152818161046b015281816107e80152818161096001528181610f1e015261112801526119106000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a457c2d71161007c578063a457c2d7146102f8578063a9059cbb1461030b578063b6b55f251461031e578063be65ab8c14610331578063dd62ed3e14610351578063fe8396181461036457600080fd5b806370a082311461029857806375311fc6146102c157806382a71ef2146102d45780638381f58a146102e757806395d89b41146102f057600080fd5b806323b872dd1161010a57806323b872dd146102005780632e1a7d4d14610213578063313ce5671461022857806339509351146102375780636d9537041461024a5780636f307dc31461027157600080fd5b806306fdde0314610147578063095ea7b3146101655780630b7dd51c1461018857806317c1e379146101c757806318160ddd146101ee575b600080fd5b61014f61036c565b60405161015c9190611457565b60405180910390f35b6101786101733660046114ba565b6103fe565b604051901515815260200161015c565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015c565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6002545b60405190815260200161015c565b61017861020e3660046114e6565b610418565b610226610221366004611527565b61043c565b005b6040516012815260200161015c565b6101786102453660046114ba565b6104e4565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6101f26102a6366004611540565b6001600160a01b031660009081526020819052604090205490565b6102266102cf366004611564565b610506565b6006546101af906001600160a01b031681565b6101f260055481565b61014f610729565b6101786103063660046114ba565b610738565b6101786103193660046114ba565b6107b8565b61022661032c366004611527565b6107c6565b6101f261033f366004611540565b60076020526000908152604090205481565b6101f261035f366004611622565b610873565b61022661089e565b60606003805461037b9061165b565b80601f01602080910402602001604051908101604052809291908181526020018280546103a79061165b565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905090565b60003361040c818585610a0f565b60019150505b92915050565b600033610426858285610b33565b610431858585610bad565b506001949350505050565b6104463382610d51565b61044f81610e83565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190611695565b5050565b60003361040c8185856104f78383610873565b61050191906116cd565b610a0f565b6001600160a01b038516158061051a575082155b1561053857604051637c946ed760e01b815260040160405180910390fd5b6001600160a01b038616600090815260076020526040902054871461057057604051632bf773b360e11b815260040160405180910390fd5b6040805160208082018a90526bffffffffffffffffffffffff1960608a811b82168486015289811b8216605485015288901b166068830152607c80830187905283518084039091018152609c90920190925280519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81209050600061063a8286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f9792505050565b9050886001600160a01b0316816001600160a01b03161461066e576040516353c9973560e11b815260040160405180910390fd5b6001600160a01b0389166000908152600760205260409020546106929060016116cd565b6001600160a01b038a81166000908152600760205260409081902092909255905163a9059cbb60e01b81528982166004820152602481018890529088169063a9059cbb906044016020604051808303816000875af11580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190611695565b5050505050505050505050565b60606004805461037b9061165b565b600033816107468286610873565b9050838110156107ab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104318286868403610a0f565b60003361040c818585610bad565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190611695565b506108683382610fbb565b61087061107a565b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006108a960025490565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561090d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093191906116e0565b61093b91906116f9565b905061094681610e83565b60065460405163226ee4ef60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905291821660448201527f00000000000000000000000000000000000000000000000000000000000000009091169063226ee4ef906064016000604051808303816000875af11580156109e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a0a91908101906117e2565b505050565b6001600160a01b038316610a715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107a2565b6001600160a01b038216610ad25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107a2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b3f8484610873565b90506000198114610ba75781811015610b9a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107a2565b610ba78484848403610a0f565b50505050565b6001600160a01b038316610c115760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107a2565b6001600160a01b038216610c735760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107a2565b6001600160a01b03831660009081526020819052604090205481811015610ceb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107a2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ba7565b6001600160a01b038216610db15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107a2565b6001600160a01b03821660009081526020819052604090205481811015610e255760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107a2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ee3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0791906118a7565b604051631a4ca37b60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201859052306044830152919250908216906369328dec90606401600060405180830381600087803b158015610f7b57600080fd5b505af1158015610f8f573d6000803e3d6000fd5b505050505050565b6000806000610fa68585611204565b91509150610fb381611249565b509392505050565b6001600160a01b0382166110115760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107a2565b806002600082825461102391906116cd565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe91906118a7565b6040516370a0823160e01b81523060048201529091506001600160a01b038083169163617ba037917f000000000000000000000000000000000000000000000000000000000000000091908216906370a0823190602401602060405180830381865afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119691906116e0565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015230604482015260006064820152608401600060405180830381600087803b1580156111e957600080fd5b505af11580156111fd573d6000803e3d6000fd5b5050505050565b600080825160410361123a5760208301516040840151606085015160001a61122e87828585611393565b94509450505050611242565b506000905060025b9250929050565b600081600481111561125d5761125d6118c4565b036112655750565b6001816004811115611279576112796118c4565b036112c65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107a2565b60028160048111156112da576112da6118c4565b036113275760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107a2565b600381600481111561133b5761133b6118c4565b036108705760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107a2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113ca575060009050600361144e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561141e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114475760006001925092505061144e565b9150600090505b94509492505050565b600060208083528351808285015260005b8181101561148457858101830151858201604001528201611468565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461087057600080fd5b600080604083850312156114cd57600080fd5b82356114d8816114a5565b946020939093013593505050565b6000806000606084860312156114fb57600080fd5b8335611506816114a5565b92506020840135611516816114a5565b929592945050506040919091013590565b60006020828403121561153957600080fd5b5035919050565b60006020828403121561155257600080fd5b813561155d816114a5565b9392505050565b600080600080600080600060c0888a03121561157f57600080fd5b873596506020880135611591816114a5565b955060408801356115a1816114a5565b945060608801356115b1816114a5565b93506080880135925060a088013567ffffffffffffffff808211156115d557600080fd5b818a0191508a601f8301126115e957600080fd5b8135818111156115f857600080fd5b8b602082850101111561160a57600080fd5b60208301945080935050505092959891949750929550565b6000806040838503121561163557600080fd5b8235611640816114a5565b91506020830135611650816114a5565b809150509250929050565b600181811c9082168061166f57607f821691505b60208210810361168f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156116a757600080fd5b8151801515811461155d57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610412576104126116b7565b6000602082840312156116f257600080fd5b5051919050565b81810381811115610412576104126116b7565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561174b5761174b61170c565b604052919050565b600067ffffffffffffffff82111561176d5761176d61170c565b5060051b60200190565b600082601f83011261178857600080fd5b8151602061179d61179883611753565b611722565b82815260059290921b840181019181810190868411156117bc57600080fd5b8286015b848110156117d757805183529183019183016117c0565b509695505050505050565b600080604083850312156117f557600080fd5b825167ffffffffffffffff8082111561180d57600080fd5b818501915085601f83011261182157600080fd5b8151602061183161179883611753565b82815260059290921b8401810191818101908984111561185057600080fd5b948201945b83861015611877578551611868816114a5565b82529482019490820190611855565b9188015191965090935050508082111561189057600080fd5b5061189d85828601611777565b9150509250929050565b6000602082840312156118b957600080fd5b815161155d816114a5565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b1aa0c79e6dcaa986dbee5e35632226ed0d3604009f2f68e17bf3cc9bd2c779764736f6c63430008140033",
    "sourceMap": "506:3722:21:-:0;;;908:568;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1147:5;1154:7;2046:5:12;:13;1147:5:21;2046::12;:13;:::i;:::-;-1:-1:-1;2069:7:12;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;;;;;;;1173:31:21;;::::1;;::::0;;;1214:33;;::::1;;::::0;1257:54;;::::1;;::::0;;;1321:36;;::::1;;::::0;1367:11:::1;:26:::0;;-1:-1:-1;;;;;;1367:26:21::1;::::0;;::::1;::::0;;;::::1;::::0;;;1423::::1;::::0;;-1:-1:-1;;;1423:26:21;;;;1173:31;;1404:18:::1;::::0;1257:54;;1423:24:::1;::::0;:26:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;1257:54;1423:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1404:65;::::0;-1:-1:-1;;;;;;1404:65:21::1;::::0;;;;;;-1:-1:-1;;;;;5163:32:26;;;1404:65:21::1;::::0;::::1;5145:51:26::0;-1:-1:-1;;5212:18:26;;;5205:34;5118:18;;1404:65:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;908:568:::0;;;;;;;506:3722;;14:127:26;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:26;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:26;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:26:o;991:177::-;1070:13;;-1:-1:-1;;;;;1112:31:26;;1102:42;;1092:70;;1158:1;1155;1148:12;1092:70;991:177;;;:::o;1173:991::-;1317:6;1325;1333;1341;1349;1357;1365;1418:3;1406:9;1397:7;1393:23;1389:33;1386:53;;;1435:1;1432;1425:12;1386:53;1462:16;;-1:-1:-1;;;;;1527:14:26;;;1524:34;;;1554:1;1551;1544:12;1524:34;1577:61;1630:7;1621:6;1610:9;1606:22;1577:61;:::i;:::-;1567:71;;1684:2;1673:9;1669:18;1663:25;1647:41;;1713:2;1703:8;1700:16;1697:36;;;1729:1;1726;1719:12;1697:36;;1752:63;1807:7;1796:8;1785:9;1781:24;1752:63;:::i;:::-;1742:73;;;1834:49;1879:2;1868:9;1864:18;1834:49;:::i;:::-;1824:59;;1902:49;1947:2;1936:9;1932:18;1902:49;:::i;:::-;1892:59;;1970:50;2015:3;2004:9;2000:19;1970:50;:::i;:::-;1960:60;;2039:50;2084:3;2073:9;2069:19;2039:50;:::i;:::-;2029:60;;2108:50;2153:3;2142:9;2138:19;2108:50;:::i;:::-;2098:60;;1173:991;;;;;;;;;;:::o;2169:380::-;2248:1;2244:12;;;;2291;;;2312:61;;2366:4;2358:6;2354:17;2344:27;;2312:61;2419:2;2411:6;2408:14;2388:18;2385:38;2382:161;;2465:10;2460:3;2456:20;2453:1;2446:31;2500:4;2497:1;2490:15;2528:4;2525:1;2518:15;2382:161;;2169:380;;;:::o;2680:545::-;2782:2;2777:3;2774:11;2771:448;;;2818:1;2843:5;2839:2;2832:17;2888:4;2884:2;2874:19;2958:2;2946:10;2942:19;2939:1;2935:27;2929:4;2925:38;2994:4;2982:10;2979:20;2976:47;;;-1:-1:-1;3017:4:26;2976:47;3072:2;3067:3;3063:12;3060:1;3056:20;3050:4;3046:31;3036:41;;3127:82;3145:2;3138:5;3135:13;3127:82;;;3190:17;;;3171:1;3160:13;3127:82;;;3131:3;;;2771:448;2680:545;;;:::o;3401:1352::-;3521:10;;-1:-1:-1;;;;;3543:30:26;;3540:56;;;3576:18;;:::i;:::-;3605:97;3695:6;3655:38;3687:4;3681:11;3655:38;:::i;:::-;3649:4;3605:97;:::i;:::-;3757:4;;3821:2;3810:14;;3838:1;3833:663;;;;4540:1;4557:6;4554:89;;;-1:-1:-1;4609:19:26;;;4603:26;4554:89;-1:-1:-1;;3358:1:26;3354:11;;;3350:24;3346:29;3336:40;3382:1;3378:11;;;3333:57;4656:81;;3803:944;;3833:663;2627:1;2620:14;;;2664:4;2651:18;;-1:-1:-1;;3869:20:26;;;3987:236;4001:7;3998:1;3995:14;3987:236;;;4090:19;;;4084:26;4069:42;;4182:27;;;;4150:1;4138:14;;;;4017:19;;3987:236;;;3991:3;4251:6;4242:7;4239:19;4236:201;;;4312:19;;;4306:26;-1:-1:-1;;4395:1:26;4391:14;;;4407:3;4387:24;4383:37;4379:42;4364:58;4349:74;;4236:201;-1:-1:-1;;;;;4483:1:26;4467:14;;;4463:22;4450:36;;-1:-1:-1;3401:1352:26:o;4758:208::-;4828:6;4881:2;4869:9;4860:7;4856:23;4852:32;4849:52;;;4897:1;4894;4887:12;4849:52;4920:40;4950:9;4920:40;:::i;:::-;4910:50;4758:208;-1:-1:-1;;;4758:208:26:o;5250:277::-;5317:6;5370:2;5358:9;5349:7;5345:23;5341:32;5338:52;;;5386:1;5383;5376:12;5338:52;5418:9;5412:16;5471:5;5464:13;5457:21;5450:5;5447:32;5437:60;;5493:1;5490;5483:12;5250:277;506:3722:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a457c2d71161007c578063a457c2d7146102f8578063a9059cbb1461030b578063b6b55f251461031e578063be65ab8c14610331578063dd62ed3e14610351578063fe8396181461036457600080fd5b806370a082311461029857806375311fc6146102c157806382a71ef2146102d45780638381f58a146102e757806395d89b41146102f057600080fd5b806323b872dd1161010a57806323b872dd146102005780632e1a7d4d14610213578063313ce5671461022857806339509351146102375780636d9537041461024a5780636f307dc31461027157600080fd5b806306fdde0314610147578063095ea7b3146101655780630b7dd51c1461018857806317c1e379146101c757806318160ddd146101ee575b600080fd5b61014f61036c565b60405161015c9190611457565b60405180910390f35b6101786101733660046114ba565b6103fe565b604051901515815260200161015c565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015c565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6002545b60405190815260200161015c565b61017861020e3660046114e6565b610418565b610226610221366004611527565b61043c565b005b6040516012815260200161015c565b6101786102453660046114ba565b6104e4565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6101f26102a6366004611540565b6001600160a01b031660009081526020819052604090205490565b6102266102cf366004611564565b610506565b6006546101af906001600160a01b031681565b6101f260055481565b61014f610729565b6101786103063660046114ba565b610738565b6101786103193660046114ba565b6107b8565b61022661032c366004611527565b6107c6565b6101f261033f366004611540565b60076020526000908152604090205481565b6101f261035f366004611622565b610873565b61022661089e565b60606003805461037b9061165b565b80601f01602080910402602001604051908101604052809291908181526020018280546103a79061165b565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905090565b60003361040c818585610a0f565b60019150505b92915050565b600033610426858285610b33565b610431858585610bad565b506001949350505050565b6104463382610d51565b61044f81610e83565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190611695565b5050565b60003361040c8185856104f78383610873565b61050191906116cd565b610a0f565b6001600160a01b038516158061051a575082155b1561053857604051637c946ed760e01b815260040160405180910390fd5b6001600160a01b038616600090815260076020526040902054871461057057604051632bf773b360e11b815260040160405180910390fd5b6040805160208082018a90526bffffffffffffffffffffffff1960608a811b82168486015289811b8216605485015288901b166068830152607c80830187905283518084039091018152609c90920190925280519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81209050600061063a8286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f9792505050565b9050886001600160a01b0316816001600160a01b03161461066e576040516353c9973560e11b815260040160405180910390fd5b6001600160a01b0389166000908152600760205260409020546106929060016116cd565b6001600160a01b038a81166000908152600760205260409081902092909255905163a9059cbb60e01b81528982166004820152602481018890529088169063a9059cbb906044016020604051808303816000875af11580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190611695565b5050505050505050505050565b60606004805461037b9061165b565b600033816107468286610873565b9050838110156107ab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104318286868403610a0f565b60003361040c818585610bad565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190611695565b506108683382610fbb565b61087061107a565b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006108a960025490565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561090d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093191906116e0565b61093b91906116f9565b905061094681610e83565b60065460405163226ee4ef60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905291821660448201527f00000000000000000000000000000000000000000000000000000000000000009091169063226ee4ef906064016000604051808303816000875af11580156109e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a0a91908101906117e2565b505050565b6001600160a01b038316610a715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107a2565b6001600160a01b038216610ad25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107a2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b3f8484610873565b90506000198114610ba75781811015610b9a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107a2565b610ba78484848403610a0f565b50505050565b6001600160a01b038316610c115760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107a2565b6001600160a01b038216610c735760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107a2565b6001600160a01b03831660009081526020819052604090205481811015610ceb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107a2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ba7565b6001600160a01b038216610db15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107a2565b6001600160a01b03821660009081526020819052604090205481811015610e255760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107a2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ee3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0791906118a7565b604051631a4ca37b60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201859052306044830152919250908216906369328dec90606401600060405180830381600087803b158015610f7b57600080fd5b505af1158015610f8f573d6000803e3d6000fd5b505050505050565b6000806000610fa68585611204565b91509150610fb381611249565b509392505050565b6001600160a01b0382166110115760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107a2565b806002600082825461102391906116cd565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe91906118a7565b6040516370a0823160e01b81523060048201529091506001600160a01b038083169163617ba037917f000000000000000000000000000000000000000000000000000000000000000091908216906370a0823190602401602060405180830381865afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119691906116e0565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015230604482015260006064820152608401600060405180830381600087803b1580156111e957600080fd5b505af11580156111fd573d6000803e3d6000fd5b5050505050565b600080825160410361123a5760208301516040840151606085015160001a61122e87828585611393565b94509450505050611242565b506000905060025b9250929050565b600081600481111561125d5761125d6118c4565b036112655750565b6001816004811115611279576112796118c4565b036112c65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107a2565b60028160048111156112da576112da6118c4565b036113275760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107a2565b600381600481111561133b5761133b6118c4565b036108705760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107a2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113ca575060009050600361144e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561141e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114475760006001925092505061144e565b9150600090505b94509492505050565b600060208083528351808285015260005b8181101561148457858101830151858201604001528201611468565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461087057600080fd5b600080604083850312156114cd57600080fd5b82356114d8816114a5565b946020939093013593505050565b6000806000606084860312156114fb57600080fd5b8335611506816114a5565b92506020840135611516816114a5565b929592945050506040919091013590565b60006020828403121561153957600080fd5b5035919050565b60006020828403121561155257600080fd5b813561155d816114a5565b9392505050565b600080600080600080600060c0888a03121561157f57600080fd5b873596506020880135611591816114a5565b955060408801356115a1816114a5565b945060608801356115b1816114a5565b93506080880135925060a088013567ffffffffffffffff808211156115d557600080fd5b818a0191508a601f8301126115e957600080fd5b8135818111156115f857600080fd5b8b602082850101111561160a57600080fd5b60208301945080935050505092959891949750929550565b6000806040838503121561163557600080fd5b8235611640816114a5565b91506020830135611650816114a5565b809150509250929050565b600181811c9082168061166f57607f821691505b60208210810361168f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156116a757600080fd5b8151801515811461155d57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610412576104126116b7565b6000602082840312156116f257600080fd5b5051919050565b81810381811115610412576104126116b7565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561174b5761174b61170c565b604052919050565b600067ffffffffffffffff82111561176d5761176d61170c565b5060051b60200190565b600082601f83011261178857600080fd5b8151602061179d61179883611753565b611722565b82815260059290921b840181019181810190868411156117bc57600080fd5b8286015b848110156117d757805183529183019183016117c0565b509695505050505050565b600080604083850312156117f557600080fd5b825167ffffffffffffffff8082111561180d57600080fd5b818501915085601f83011261182157600080fd5b8151602061183161179883611753565b82815260059290921b8401810191818101908984111561185057600080fd5b948201945b83861015611877578551611868816114a5565b82529482019490820190611855565b9188015191965090935050508082111561189057600080fd5b5061189d85828601611777565b9150509250929050565b6000602082840312156118b957600080fd5b815161155d816114a5565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b1aa0c79e6dcaa986dbee5e35632226ed0d3604009f2f68e17bf3cc9bd2c779764736f6c63430008140033",
    "sourceMap": "506:3722:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1188:14:26;;1181:22;1163:41;;1151:2;1136:18;4444:197:12;1023:187:26;705:36:21;;;;;;;;-1:-1:-1;;;;;1401:32:26;;;1383:51;;1371:2;1356:18;705:36:21;1215:225:26;649:50:21;;;;;3255:106:12;3342:12;;3255:106;;;1825:25:26;;;1813:2;1798:18;3255:106:12;1679:177:26;5203:256:12;;;;;;:::i;:::-;;:::i;2050:334:21:-;;;;;;:::i;:::-;;:::i;:::-;;3104:91:12;;;3186:2;2649:36:26;;2637:2;2622:18;3104:91:12;2507:184:26;5854:234:12;;;;;;:::i;:::-;;:::i;609:34:21:-;;;;;570:33;;;;;3419:125:12;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:12;3493:7;3519:18;;;;;;;;;;;;3419:125;3410:816:21;;;;;;:::i;:::-;;:::i;747:26::-;;;;;-1:-1:-1;;;;;747:26:21;;;543:21;;;;;;2369:102:12;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1605:318:21:-;;;;;;:::i;:::-;;:::i;779:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3987:149:12;;;;;;:::i;:::-;;:::i;3080:324:21:-;;;:::i;2158:98:12:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:15;4581:32:12;719:10:15;4597:7:12;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:15;5356:38:12;5372:4;719:10:15;5387:6:12;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:12;;5203:256;-1:-1:-1;;;;5203:256:12:o;2050:334:21:-;2164:25;2170:10;2182:6;2164:5;:25::i;:::-;2230:29;2252:6;2230:21;:29::i;:::-;2338:39;;-1:-1:-1;;;2338:39:21;;2358:10;2338:39;;;5483:51:26;5550:18;;;5543:34;;;2338:10:21;-1:-1:-1;;;;;2338:19:21;;;;5456:18:26;;2338:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2050:334;:::o;5854:234:12:-;5942:4;719:10:15;5996:64:12;719:10:15;6012:7:12;6049:10;6021:25;719:10:15;6012:7:12;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3410:816:21:-;-1:-1:-1;;;;;3620:23:21;;;;:38;;-1:-1:-1;3647:11:21;;3620:38;3616:87;;;3681:11;;-1:-1:-1;;;3681:11:21;;;;;;;;;;;3616:87;-1:-1:-1;;;;;3723:14:21;;;;;;:8;:14;;;;;;3717:20;;3713:76;;3760:18;;-1:-1:-1;;;3760:18:21;;;;;;;;;;;3713:76;3844:52;;;;;;;6373:19:26;;;-1:-1:-1;;6480:2:26;6476:15;;;6472:24;;6458:12;;;6451:46;6531:15;;;6527:24;;6513:12;;;6506:46;6586:15;;;6582:24;6568:12;;;6561:46;6623:12;;;;6616:28;;;3844:52:21;;;;;;;;;;6660:13:26;;;;3844:52:21;;;3821:85;;;;;7389:34:17;-1:-1:-1;7376:48:17;;;7444:4;7437:18;;;7495:4;7479:21;;3916:65:21;;3991:14;4008:39;4022:13;4037:9;;4008:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4008:13:21;;-1:-1:-1;;;4008:39:21:i;:::-;3991:56;;4072:4;-1:-1:-1;;;;;4062:14:21;:6;-1:-1:-1;;;;;4062:14:21;;4058:65;;4099:13;;-1:-1:-1;;;4099:13:21;;;;;;;;;;;4058:65;-1:-1:-1;;;;;4150:14:21;;;;;;:8;:14;;;;;;:18;;4167:1;4150:18;:::i;:::-;-1:-1:-1;;;;;4133:14:21;;;;;;;:8;:14;;;;;;;:35;;;;4179:40;;-1:-1:-1;;;4179:40:21;;5501:32:26;;;4179:40:21;;;5483:51:26;5550:18;;;5543:34;;;4179:21:21;;;;;;5456:18:26;;4179:40:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3606:620;;;3410:816;;;;;;;:::o;2369:102:12:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:15;6668:4:12;6749:25;719:10:15;6766:7:12;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:12;;6886:2:26;6784:85:12;;;6868:21:26;6925:2;6905:18;;;6898:30;6964:34;6944:18;;;6937:62;-1:-1:-1;;;7015:18:26;;;7008:35;7060:19;;6784:85:12;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:15;3873:28:12;719:10:15;3890:2:12;3894:6;3873:9;:28::i;1605:318:21:-;1703:58;;-1:-1:-1;;;1703:58:21;;1727:10;1703:58;;;7330:34:26;1747:4:21;7380:18:26;;;7373:43;7432:18;;;7425:34;;;1703:10:21;-1:-1:-1;;;;;1703:23:21;;;;7265:18:26;;1703:58:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1833:25;1839:10;1851:6;1833:5;:25::i;:::-;1896:20;:18;:20::i;:::-;1605:318;:::o;3987:149:12:-;-1:-1:-1;;;;;4102:18:12;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;3080:324:21:-;3156:13;3211;3342:12:12;;;3255:106;3211:13:21;3172:36;;-1:-1:-1;;;3172:36:21;;3202:4;3172:36;;;1383:51:26;3172:11:21;-1:-1:-1;;;;;3172:21:21;;;;1356:18:26;;3172:36:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;;:::i;:::-;3156:68;;3258:28;3280:5;3258:21;:28::i;:::-;3385:11;;3327:70;;-1:-1:-1;;;3327:70:21;;-1:-1:-1;;;;;3365:10:21;8050:15:26;;3327:70:21;;;8032:34:26;8082:18;;;8075:34;;;3385:11:21;;;8125:18:26;;;8118:43;3327:6:21;:29;;;;;;7967:18:26;;3327:70:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3327:70:21;;;;;;;;;;;;:::i;:::-;;;3115:289;3080:324::o;10457:340:12:-;-1:-1:-1;;;;;10558:19:12;;10550:68;;;;-1:-1:-1;;;10550:68:12;;10852:2:26;10550:68:12;;;10834:21:26;10891:2;10871:18;;;10864:30;10930:34;10910:18;;;10903:62;-1:-1:-1;;;10981:18:26;;;10974:34;11025:19;;10550:68:12;10650:400:26;10550:68:12;-1:-1:-1;;;;;10636:21:12;;10628:68;;;;-1:-1:-1;;;10628:68:12;;11257:2:26;10628:68:12;;;11239:21:26;11296:2;11276:18;;;11269:30;11335:34;11315:18;;;11308:62;-1:-1:-1;;;11386:18:26;;;11379:32;11428:19;;10628:68:12;11055:398:26;10628:68:12;-1:-1:-1;;;;;10707:18:12;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1825:25:26;;;10758:32:12;;1798:18:26;10758:32:12;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:12;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:12;;11660:2:26;11297:68:12;;;11642:21:26;11699:2;11679:18;;;11672:30;11738:31;11718:18;;;11711:59;11787:18;;11297:68:12;11458:353:26;11297:68:12;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:12;;7544:68;;;;-1:-1:-1;;;7544:68:12;;12018:2:26;7544:68:12;;;12000:21:26;12057:2;12037:18;;;12030:30;12096:34;12076:18;;;12069:62;-1:-1:-1;;;12147:18:26;;;12140:35;12192:19;;7544:68:12;11816:401:26;7544:68:12;-1:-1:-1;;;;;7630:16:12;;7622:64;;;;-1:-1:-1;;;7622:64:12;;12424:2:26;7622:64:12;;;12406:21:26;12463:2;12443:18;;;12436:30;12502:34;12482:18;;;12475:62;-1:-1:-1;;;12553:18:26;;;12546:33;12596:19;;7622:64:12;12222:399:26;7622:64:12;-1:-1:-1;;;;;7768:15:12;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:12;;12828:2:26;7793:72:12;;;12810:21:26;12867:2;12847:18;;;12840:30;12906:34;12886:18;;;12879:62;-1:-1:-1;;;12957:18:26;;;12950:36;13003:19;;7793:72:12;12626:402:26;7793:72:12;-1:-1:-1;;;;;7899:15:12;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1825:25:26;;;8114:13:12;;8163:26;;1798:18:26;8163:26:12;;;;;;;8200:37;3080:324:21;9375:659:12;-1:-1:-1;;;;;9458:21:12;;9450:67;;;;-1:-1:-1;;;9450:67:12;;13235:2:26;9450:67:12;;;13217:21:26;13274:2;13254:18;;;13247:30;13313:34;13293:18;;;13286:62;-1:-1:-1;;;13364:18:26;;;13357:31;13405:19;;9450:67:12;13033:397:26;9450:67:12;-1:-1:-1;;;;;9613:18:12;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:12;;13637:2:26;9641:71:12;;;13619:21:26;13676:2;13656:18;;;13649:30;13715:34;13695:18;;;13688:62;-1:-1:-1;;;13766:18:26;;;13759:32;13808:19;;9641:71:12;13435:398:26;9641:71:12;-1:-1:-1;;;;;9746:18:12;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1825:25:26;;;9746:9:12;;:18;9931:37;;1798:18:26;9931:37:12;;;;;;;3327:70:21;;3115:289;3080:324::o;2824:193::-;2890:13;2915:16;-1:-1:-1;;;;;2915:24:21;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2953:57;;-1:-1:-1;;;2953:57:21;;-1:-1:-1;;;;;2975:10:21;8050:15:26;;2953:57:21;;;8032:34:26;8082:18;;;8075:34;;;3004:4:21;8125:18:26;;;8118:43;2890:52:21;;-1:-1:-1;2953:13:21;;;;;;7967:18:26;;2953:57:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:137;2824:193;:::o;3661:227:17:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:17;3661:227;-1:-1:-1;;;3661:227:17:o;8520:535:12:-;-1:-1:-1;;;;;8603:21:12;;8595:65;;;;-1:-1:-1;;;8595:65:12;;14296:2:26;8595:65:12;;;14278:21:26;14335:2;14315:18;;;14308:30;14374:33;14354:18;;;14347:61;14425:18;;8595:65:12;14094:355:26;8595:65:12;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:12;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1825:25:26;;;8952:37:12;;1798:18:26;8952:37:12;;;;;;;2338:39:21;2050:334;:::o;2440:264::-;2489:13;2514:16;-1:-1:-1;;;;;2514:24:21;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2610:35;;-1:-1:-1;;;2610:35:21;;2639:4;2610:35;;;1383:51:26;2489:52:21;;-1:-1:-1;;;;;;2552:11:21;;;;;;2585:10;;2610:20;;;;;;1356:18:26;;2610:35:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2552:145;;-1:-1:-1;;;;;;2552:145:21;;;;;;;-1:-1:-1;;;;;14748:15:26;;;2552:145:21;;;14730:34:26;14780:18;;;14773:34;2667:4:21;14823:18:26;;;14816:43;2686:1:21;14875:18:26;;;14868:47;14664:19;;2552:145:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2479:225;2440:264::o;2145:730:17:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:17;;-1:-1:-1;2822:35:17;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:17;;15260:2:26;788:34:17;;;15242:21:26;15299:2;15279:18;;;15272:30;15338:26;15318:18;;;15311:54;15382:18;;788:34:17;15058:348:26;730:345:17;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:17;;15613:2:26;903:41:17;;;15595:21:26;15652:2;15632:18;;;15625:30;15691:33;15671:18;;;15664:61;15742:18;;903:41:17;15411:355:26;839:236:17;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:17;;15973:2:26;1020:44:17;;;15955:21:26;16012:2;15992:18;;;15985:30;16051:34;16031:18;;;16024:62;-1:-1:-1;;;16102:18:26;;;16095:32;16144:19;;1020:44:17;15771:398:26;5009:1456:17;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:17;;-1:-1:-1;6123:30:17;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;16401:25:26;;;16474:4;16462:17;;16442:18;;;16435:45;;;;16496:18;;;16489:34;;;16539:18;;;16532:34;;;6276:24:17;;16373:19:26;;6276:24:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:17;;-1:-1:-1;;6276:24:17;;;-1:-1:-1;;;;;;;6314:20:17;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:17;;-1:-1:-1;5009:1456:17;;;;;;;;:::o;14:548:26:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:131::-;-1:-1:-1;;;;;642:31:26;;632:42;;622:70;;688:1;685;678:12;703:315;771:6;779;832:2;820:9;811:7;807:23;803:32;800:52;;;848:1;845;838:12;800:52;887:9;874:23;906:31;931:5;906:31;:::i;:::-;956:5;1008:2;993:18;;;;980:32;;-1:-1:-1;;;703:315:26:o;1861:456::-;1938:6;1946;1954;2007:2;1995:9;1986:7;1982:23;1978:32;1975:52;;;2023:1;2020;2013:12;1975:52;2062:9;2049:23;2081:31;2106:5;2081:31;:::i;:::-;2131:5;-1:-1:-1;2188:2:26;2173:18;;2160:32;2201:33;2160:32;2201:33;:::i;:::-;1861:456;;2253:7;;-1:-1:-1;;;2307:2:26;2292:18;;;;2279:32;;1861:456::o;2322:180::-;2381:6;2434:2;2422:9;2413:7;2409:23;2405:32;2402:52;;;2450:1;2447;2440:12;2402:52;-1:-1:-1;2473:23:26;;2322:180;-1:-1:-1;2322:180:26:o;2919:247::-;2978:6;3031:2;3019:9;3010:7;3006:23;3002:32;2999:52;;;3047:1;3044;3037:12;2999:52;3086:9;3073:23;3105:31;3130:5;3105:31;:::i;:::-;3155:5;2919:247;-1:-1:-1;;;2919:247:26:o;3171:1147::-;3286:6;3294;3302;3310;3318;3326;3334;3387:3;3375:9;3366:7;3362:23;3358:33;3355:53;;;3404:1;3401;3394:12;3355:53;3440:9;3427:23;3417:33;;3500:2;3489:9;3485:18;3472:32;3513:31;3538:5;3513:31;:::i;:::-;3563:5;-1:-1:-1;3620:2:26;3605:18;;3592:32;3633:33;3592:32;3633:33;:::i;:::-;3685:7;-1:-1:-1;3744:2:26;3729:18;;3716:32;3757:33;3716:32;3757:33;:::i;:::-;3809:7;-1:-1:-1;3863:3:26;3848:19;;3835:33;;-1:-1:-1;3919:3:26;3904:19;;3891:33;3943:18;3973:14;;;3970:34;;;4000:1;3997;3990:12;3970:34;4038:6;4027:9;4023:22;4013:32;;4083:7;4076:4;4072:2;4068:13;4064:27;4054:55;;4105:1;4102;4095:12;4054:55;4145:2;4132:16;4171:2;4163:6;4160:14;4157:34;;;4187:1;4184;4177:12;4157:34;4232:7;4227:2;4218:6;4214:2;4210:15;4206:24;4203:37;4200:57;;;4253:1;4250;4243:12;4200:57;4284:2;4280;4276:11;4266:21;;4306:6;4296:16;;;;;3171:1147;;;;;;;;;;:::o;4531:388::-;4599:6;4607;4660:2;4648:9;4639:7;4635:23;4631:32;4628:52;;;4676:1;4673;4666:12;4628:52;4715:9;4702:23;4734:31;4759:5;4734:31;:::i;:::-;4784:5;-1:-1:-1;4841:2:26;4826:18;;4813:32;4854:33;4813:32;4854:33;:::i;:::-;4906:7;4896:17;;;4531:388;;;;;:::o;4924:380::-;5003:1;4999:12;;;;5046;;;5067:61;;5121:4;5113:6;5109:17;5099:27;;5067:61;5174:2;5166:6;5163:14;5143:18;5140:38;5137:161;;5220:10;5215:3;5211:20;5208:1;5201:31;5255:4;5252:1;5245:15;5283:4;5280:1;5273:15;5137:161;;4924:380;;;:::o;5588:277::-;5655:6;5708:2;5696:9;5687:7;5683:23;5679:32;5676:52;;;5724:1;5721;5714:12;5676:52;5756:9;5750:16;5809:5;5802:13;5795:21;5788:5;5785:32;5775:60;;5831:1;5828;5821:12;5870:127;5931:10;5926:3;5922:20;5919:1;5912:31;5962:4;5959:1;5952:15;5986:4;5983:1;5976:15;6002:125;6067:9;;;6088:10;;;6085:36;;;6101:18;;:::i;7470:184::-;7540:6;7593:2;7581:9;7572:7;7568:23;7564:32;7561:52;;;7609:1;7606;7599:12;7561:52;-1:-1:-1;7632:16:26;;7470:184;-1:-1:-1;7470:184:26:o;7659:128::-;7726:9;;;7747:11;;;7744:37;;;7761:18;;:::i;8172:127::-;8233:10;8228:3;8224:20;8221:1;8214:31;8264:4;8261:1;8254:15;8288:4;8285:1;8278:15;8304:275;8375:2;8369:9;8440:2;8421:13;;-1:-1:-1;;8417:27:26;8405:40;;8475:18;8460:34;;8496:22;;;8457:62;8454:88;;;8522:18;;:::i;:::-;8558:2;8551:22;8304:275;;-1:-1:-1;8304:275:26:o;8584:183::-;8644:4;8677:18;8669:6;8666:30;8663:56;;;8699:18;;:::i;:::-;-1:-1:-1;8744:1:26;8740:14;8756:4;8736:25;;8584:183::o;8772:659::-;8837:5;8890:3;8883:4;8875:6;8871:17;8867:27;8857:55;;8908:1;8905;8898:12;8857:55;8937:6;8931:13;8963:4;8987:60;9003:43;9043:2;9003:43;:::i;:::-;8987:60;:::i;:::-;9081:15;;;9167:1;9163:10;;;;9151:23;;9147:32;;;9112:12;;;;9191:15;;;9188:35;;;9219:1;9216;9209:12;9188:35;9255:2;9247:6;9243:15;9267:135;9283:6;9278:3;9275:15;9267:135;;;9349:10;;9337:23;;9380:12;;;;9300;;9267:135;;;-1:-1:-1;9420:5:26;8772:659;-1:-1:-1;;;;;;8772:659:26:o;9436:1209::-;9565:6;9573;9626:2;9614:9;9605:7;9601:23;9597:32;9594:52;;;9642:1;9639;9632:12;9594:52;9675:9;9669:16;9704:18;9745:2;9737:6;9734:14;9731:34;;;9761:1;9758;9751:12;9731:34;9799:6;9788:9;9784:22;9774:32;;9844:7;9837:4;9833:2;9829:13;9825:27;9815:55;;9866:1;9863;9856:12;9815:55;9895:2;9889:9;9917:4;9941:60;9957:43;9997:2;9957:43;:::i;9941:60::-;10035:15;;;10117:1;10113:10;;;;10105:19;;10101:28;;;10066:12;;;;10141:19;;;10138:39;;;10173:1;10170;10163:12;10138:39;10197:11;;;;10217:210;10233:6;10228:3;10225:15;10217:210;;;10306:3;10300:10;10323:31;10348:5;10323:31;:::i;:::-;10367:18;;10250:12;;;;10405;;;;10217:210;;;10482:18;;;10476:25;10446:5;;-1:-1:-1;10476:25:26;;-1:-1:-1;;;10513:16:26;;;10510:36;;;10542:1;10539;10532:12;10510:36;;10565:74;10631:7;10620:8;10609:9;10605:24;10565:74;:::i;:::-;10555:84;;;9436:1209;;;;;:::o;13838:251::-;13908:6;13961:2;13949:9;13940:7;13936:23;13932:32;13929:52;;;13977:1;13974;13967:12;13929:52;14009:9;14003:16;14028:31;14053:5;14028:31;:::i;14926:127::-;14987:10;14982:3;14978:20;14975:1;14968:31;15018:4;15015:1;15008:15;15042:4;15039:1;15032:15",
    "linkReferences": {},
    "immutableReferences": {
      "26486": [
        {
          "start": 630,
          "length": 32
        },
        {
          "start": 1131,
          "length": 32
        },
        {
          "start": 2024,
          "length": 32
        },
        {
          "start": 2400,
          "length": 32
        },
        {
          "start": 3870,
          "length": 32
        },
        {
          "start": 4392,
          "length": 32
        }
      ],
      "26489": [
        {
          "start": 591,
          "length": 32
        },
        {
          "start": 2238,
          "length": 32
        }
      ],
      "26492": [
        {
          "start": 460,
          "length": 32
        },
        {
          "start": 3719,
          "length": 32
        },
        {
          "start": 4222,
          "length": 32
        }
      ],
      "26495": [
        {
          "start": 397,
          "length": 32
        },
        {
          "start": 2455,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "aUnderlying()": "6d953704",
    "aavePoolProvider()": "17c1e379",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "buyCarbonCredits()": "fe839618",
    "carbonToken()": "82a71ef2",
    "counters(address)": "be65ab8c",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256)": "b6b55f25",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "number()": "8381f58a",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "toucan()": "0b7dd51c",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferWithSignature(uint256,address,address,address,uint256,bytes)": "75311fc6",
    "underlying()": "6f307dc3",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aUnderlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aavePoolProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_offsetHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_carbonToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aUnderlying\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aavePoolProvider\",\"outputs\":[{\"internalType\":\"contract AavePoolProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyCarbonCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"carbonToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"counters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toucan\",\"outputs\":[{\"internalType\":\"contract OffsetHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"transferWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"params\":{\"amount\":\"Amount of underlying token to deposit\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"Amount of wrapped token to burn\"}}},\"title\":\"A Green Wrapper for ERC20 tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCarbonCredits()\":{\"notice\":\"Buys carbon credits with yield from Aave\"},\"deposit(uint256)\":{\"notice\":\"Deposit underlying token to mint wrapped token\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw underlying token by burning wrapped token\"}},\"notice\":\"Use this contract to wrap ERC20 tokens whose yield is used to buy carbon credits\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GreenWrapper.sol\":\"GreenWrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/GreenWrapper.sol\":{\"keccak256\":\"0x0c91f53db6d4a3747eb6c3ccef8c7950ae751fc389926580294c76c8d639d3bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2c391811d5376d53e7d4d97f3d7ab6cc200c5fb0c4749081856331f157670906\",\"dweb:/ipfs/QmX53vaJXCT7g2boU5xdWyqGMF7fHPw3TbdBv5zjLAuQp1\"]},\"src/interfaces/AavePool.sol\":{\"keccak256\":\"0x2c85f086b151f4ba49fdd6e0710faa7d5d6b4977b0af1d5ea419550f3761625b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94c9d08453a6125cb2dbb159393cd280695a833572aa6254be665d58855df1ab\",\"dweb:/ipfs/QmPd4gzT6hsUmWqGTUk7ZxADxWrfcmJ5HcAw2FJsUSkEr4\"]},\"src/interfaces/AavePoolProvider.sol\":{\"keccak256\":\"0x2d03fc95ccd487aff28de25cfc8e2a74ec7a03b0596bcf868c4a69d67e2598a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e147f11948e1e7bf7ba705c549cbaceb78f989457b28e265dc94a33a7ee4fb2\",\"dweb:/ipfs/QmfHaqRMUJca8Hsv1cAaa2WLhwJE1ycqM673dgeV6zWA5H\"]},\"src/interfaces/OffsetHelper.sol\":{\"keccak256\":\"0x14a3f8619637832b52882737590c23f2322af03368708430ce3ade16ead0d6e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7532f47f07e9804c86b9de7dd593f2d8065911e78e4213286e6b44a8c2f1423\",\"dweb:/ipfs/QmeBzZTgTEYceV6RHZZjxPKEKeufYdHuoWmGYgm7e54bNq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_underlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aUnderlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aavePoolProvider",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_offsetHelper",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_carbonToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyProcessed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongSigner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aUnderlying",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aavePoolProvider",
          "outputs": [
            {
              "internalType": "contract AavePoolProvider",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyCarbonCredits"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carbonToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "counters",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "number",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "toucan",
          "outputs": [
            {
              "internalType": "contract OffsetHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferWithSignature"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256)": {
            "params": {
              "amount": "Amount of underlying token to deposit"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "withdraw(uint256)": {
            "params": {
              "amount": "Amount of wrapped token to burn"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCarbonCredits()": {
            "notice": "Buys carbon credits with yield from Aave"
          },
          "deposit(uint256)": {
            "notice": "Deposit underlying token to mint wrapped token"
          },
          "withdraw(uint256)": {
            "notice": "Withdraw underlying token by burning wrapped token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GreenWrapper.sol": "GreenWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/GreenWrapper.sol": {
        "keccak256": "0x0c91f53db6d4a3747eb6c3ccef8c7950ae751fc389926580294c76c8d639d3bc",
        "urls": [
          "bzz-raw://2c391811d5376d53e7d4d97f3d7ab6cc200c5fb0c4749081856331f157670906",
          "dweb:/ipfs/QmX53vaJXCT7g2boU5xdWyqGMF7fHPw3TbdBv5zjLAuQp1"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/AavePool.sol": {
        "keccak256": "0x2c85f086b151f4ba49fdd6e0710faa7d5d6b4977b0af1d5ea419550f3761625b",
        "urls": [
          "bzz-raw://94c9d08453a6125cb2dbb159393cd280695a833572aa6254be665d58855df1ab",
          "dweb:/ipfs/QmPd4gzT6hsUmWqGTUk7ZxADxWrfcmJ5HcAw2FJsUSkEr4"
        ],
        "license": "MIT"
      },
      "src/interfaces/AavePoolProvider.sol": {
        "keccak256": "0x2d03fc95ccd487aff28de25cfc8e2a74ec7a03b0596bcf868c4a69d67e2598a0",
        "urls": [
          "bzz-raw://4e147f11948e1e7bf7ba705c549cbaceb78f989457b28e265dc94a33a7ee4fb2",
          "dweb:/ipfs/QmfHaqRMUJca8Hsv1cAaa2WLhwJE1ycqM673dgeV6zWA5H"
        ],
        "license": "MIT"
      },
      "src/interfaces/OffsetHelper.sol": {
        "keccak256": "0x14a3f8619637832b52882737590c23f2322af03368708430ce3ade16ead0d6e7",
        "urls": [
          "bzz-raw://e7532f47f07e9804c86b9de7dd593f2d8065911e78e4213286e6b44a8c2f1423",
          "dweb:/ipfs/QmeBzZTgTEYceV6RHZZjxPKEKeufYdHuoWmGYgm7e54bNq"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GreenWrapper.sol",
    "id": 26818,
    "exportedSymbols": {
      "AavePool": [
        26859
      ],
      "AavePoolProvider": [
        26867
      ],
      "ECDSA": [
        25413
      ],
      "ERC20": [
        24693
      ],
      "GreenWrapper": [
        26817
      ],
      "OffsetHelper": [
        26885
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4190:21",
    "nodes": [
      {
        "id": 26468,
        "nodeType": "PragmaDirective",
        "src": "39:24:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 26470,
        "nodeType": "ImportDirective",
        "src": "65:57:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26818,
        "sourceUnit": 24694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26469,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24693,
              "src": "73:5:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26472,
        "nodeType": "ImportDirective",
        "src": "123:64:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "openzeppelin/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26818,
        "sourceUnit": 25414,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26471,
              "name": "ECDSA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25413,
              "src": "131:5:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26474,
        "nodeType": "ImportDirective",
        "src": "188:67:21",
        "nodes": [],
        "absolutePath": "src/interfaces/AavePoolProvider.sol",
        "file": "./interfaces/AavePoolProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26818,
        "sourceUnit": 26868,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26473,
              "name": "AavePoolProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26867,
              "src": "196:16:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26476,
        "nodeType": "ImportDirective",
        "src": "256:51:21",
        "nodes": [],
        "absolutePath": "src/interfaces/AavePool.sol",
        "file": "./interfaces/AavePool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26818,
        "sourceUnit": 26860,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26475,
              "name": "AavePool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26859,
              "src": "264:8:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26478,
        "nodeType": "ImportDirective",
        "src": "308:59:21",
        "nodes": [],
        "absolutePath": "src/interfaces/OffsetHelper.sol",
        "file": "./interfaces/OffsetHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26818,
        "sourceUnit": 26886,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26477,
              "name": "OffsetHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26885,
              "src": "316:12:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26817,
        "nodeType": "ContractDefinition",
        "src": "506:3722:21",
        "nodes": [
          {
            "id": 26483,
            "nodeType": "VariableDeclaration",
            "src": "543:21:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "8381f58a",
            "mutability": "mutable",
            "name": "number",
            "nameLocation": "558:6:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26482,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "543:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26486,
            "nodeType": "VariableDeclaration",
            "src": "570:33:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f307dc3",
            "mutability": "immutable",
            "name": "underlying",
            "nameLocation": "593:10:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$24693",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 26485,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26484,
                "name": "ERC20",
                "nameLocations": [
                  "570:5:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24693,
                "src": "570:5:21"
              },
              "referencedDeclaration": 24693,
              "src": "570:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$24693",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26489,
            "nodeType": "VariableDeclaration",
            "src": "609:34:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "6d953704",
            "mutability": "immutable",
            "name": "aUnderlying",
            "nameLocation": "632:11:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$24693",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 26488,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26487,
                "name": "ERC20",
                "nameLocations": [
                  "609:5:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24693,
                "src": "609:5:21"
              },
              "referencedDeclaration": 24693,
              "src": "609:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$24693",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26492,
            "nodeType": "VariableDeclaration",
            "src": "649:50:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "17c1e379",
            "mutability": "immutable",
            "name": "aavePoolProvider",
            "nameLocation": "683:16:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
              "typeString": "contract AavePoolProvider"
            },
            "typeName": {
              "id": 26491,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26490,
                "name": "AavePoolProvider",
                "nameLocations": [
                  "649:16:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26867,
                "src": "649:16:21"
              },
              "referencedDeclaration": 26867,
              "src": "649:16:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                "typeString": "contract AavePoolProvider"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26495,
            "nodeType": "VariableDeclaration",
            "src": "705:36:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "0b7dd51c",
            "mutability": "immutable",
            "name": "toucan",
            "nameLocation": "735:6:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OffsetHelper_$26885",
              "typeString": "contract OffsetHelper"
            },
            "typeName": {
              "id": 26494,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26493,
                "name": "OffsetHelper",
                "nameLocations": [
                  "705:12:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26885,
                "src": "705:12:21"
              },
              "referencedDeclaration": 26885,
              "src": "705:12:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OffsetHelper_$26885",
                "typeString": "contract OffsetHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26497,
            "nodeType": "VariableDeclaration",
            "src": "747:26:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "82a71ef2",
            "mutability": "mutable",
            "name": "carbonToken",
            "nameLocation": "762:11:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26496,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "747:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26501,
            "nodeType": "VariableDeclaration",
            "src": "779:43:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "be65ab8c",
            "mutability": "mutable",
            "name": "counters",
            "nameLocation": "814:8:21",
            "scope": 26817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26500,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 26498,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "787:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "779:27:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26499,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "798:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 26503,
            "nodeType": "ErrorDefinition",
            "src": "829:18:21",
            "nodes": [],
            "errorSelector": "7c946ed7",
            "name": "ZeroValue",
            "nameLocation": "835:9:21",
            "parameters": {
              "id": 26502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:2:21"
            }
          },
          {
            "id": 26505,
            "nodeType": "ErrorDefinition",
            "src": "852:25:21",
            "nodes": [],
            "errorSelector": "57eee766",
            "name": "AlreadyProcessed",
            "nameLocation": "858:16:21",
            "parameters": {
              "id": 26504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "874:2:21"
            }
          },
          {
            "id": 26507,
            "nodeType": "ErrorDefinition",
            "src": "882:20:21",
            "nodes": [],
            "errorSelector": "a7932e6a",
            "name": "WrongSigner",
            "nameLocation": "888:11:21",
            "parameters": {
              "id": 26506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:2:21"
            }
          },
          {
            "id": 26570,
            "nodeType": "FunctionDefinition",
            "src": "908:568:21",
            "nodes": [],
            "body": {
              "id": 26569,
              "nodeType": "Block",
              "src": "1163:313:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26528,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26486,
                      "src": "1173:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$24693",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26530,
                          "name": "_underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26513,
                          "src": "1192:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26529,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24693,
                        "src": "1186:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$24693_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 26531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1186:18:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$24693",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1173:31:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24693",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 26533,
                  "nodeType": "ExpressionStatement",
                  "src": "1173:31:21"
                },
                {
                  "expression": {
                    "id": 26538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26534,
                      "name": "aUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26489,
                      "src": "1214:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$24693",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26536,
                          "name": "_aUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26515,
                          "src": "1234:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26535,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24693,
                        "src": "1228:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$24693_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 26537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1228:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$24693",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1214:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24693",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 26539,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:33:21"
                },
                {
                  "expression": {
                    "id": 26544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26540,
                      "name": "aavePoolProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26492,
                      "src": "1257:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                        "typeString": "contract AavePoolProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26542,
                          "name": "_aavePoolProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26517,
                          "src": "1293:17:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26541,
                        "name": "AavePoolProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26867,
                        "src": "1276:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AavePoolProvider_$26867_$",
                          "typeString": "type(contract AavePoolProvider)"
                        }
                      },
                      "id": 26543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1276:35:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                        "typeString": "contract AavePoolProvider"
                      }
                    },
                    "src": "1257:54:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                      "typeString": "contract AavePoolProvider"
                    }
                  },
                  "id": 26545,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:54:21"
                },
                {
                  "expression": {
                    "id": 26550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26546,
                      "name": "toucan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26495,
                      "src": "1321:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OffsetHelper_$26885",
                        "typeString": "contract OffsetHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26548,
                          "name": "_offsetHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26519,
                          "src": "1343:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26547,
                        "name": "OffsetHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26885,
                        "src": "1330:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OffsetHelper_$26885_$",
                          "typeString": "type(contract OffsetHelper)"
                        }
                      },
                      "id": 26549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1330:27:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OffsetHelper_$26885",
                        "typeString": "contract OffsetHelper"
                      }
                    },
                    "src": "1321:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OffsetHelper_$26885",
                      "typeString": "contract OffsetHelper"
                    }
                  },
                  "id": 26551,
                  "nodeType": "ExpressionStatement",
                  "src": "1321:36:21"
                },
                {
                  "expression": {
                    "id": 26554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26552,
                      "name": "carbonToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26497,
                      "src": "1367:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26553,
                      "name": "_carbonToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26521,
                      "src": "1381:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1367:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26555,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:26:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26559,
                            "name": "aavePoolProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26492,
                            "src": "1423:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                              "typeString": "contract AavePoolProvider"
                            }
                          },
                          "id": 26560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1440:7:21",
                          "memberName": "getPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26866,
                          "src": "1423:24:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 26561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1423:26:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1456:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 26563,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1456:7:21",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 26562,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1451:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1451:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 26566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1465:3:21",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1451:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26556,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26486,
                        "src": "1404:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24693",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 26558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1415:7:21",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24273,
                      "src": "1404:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 26567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:65:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26568,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:65:21"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 26524,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26509,
                    "src": "1147:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 26525,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26511,
                    "src": "1154:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 26526,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 26523,
                  "name": "ERC20",
                  "nameLocations": [
                    "1141:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24693,
                  "src": "1141:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1141:21:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26509,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "943:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "929:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26508,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26511,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "972:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "958:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26510,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26513,
                  "mutability": "mutable",
                  "name": "_underlying",
                  "nameLocation": "997:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "989:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26515,
                  "mutability": "mutable",
                  "name": "_aUnderlying",
                  "nameLocation": "1026:12:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "1018:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26517,
                  "mutability": "mutable",
                  "name": "_aavePoolProvider",
                  "nameLocation": "1056:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "1048:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26519,
                  "mutability": "mutable",
                  "name": "_offsetHelper",
                  "nameLocation": "1091:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "1083:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26521,
                  "mutability": "mutable",
                  "name": "_carbonToken",
                  "nameLocation": "1122:12:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26570,
                  "src": "1114:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:221:21"
            },
            "returnParameters": {
              "id": 26527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1163:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26598,
            "nodeType": "FunctionDefinition",
            "src": "1605:318:21",
            "nodes": [],
            "body": {
              "id": 26597,
              "nodeType": "Block",
              "src": "1645:278:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1727:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1731:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1727:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26583,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1747:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                              "typeString": "contract GreenWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                              "typeString": "contract GreenWrapper"
                            }
                          ],
                          "id": 26582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1739:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1739:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1739:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26585,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26573,
                        "src": "1754:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26576,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26486,
                        "src": "1703:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24693",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 26578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1714:12:21",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24306,
                      "src": "1703:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 26586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:58:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26587,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:58:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26589,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1839:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1843:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1839:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26591,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26573,
                        "src": "1851:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26588,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24510,
                      "src": "1833:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1833:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26593,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:25:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26594,
                      "name": "_depositToStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26658,
                      "src": "1896:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:20:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26596,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:20:21"
                }
              ]
            },
            "documentation": {
              "id": 26571,
              "nodeType": "StructuredDocumentation",
              "src": "1482:118:21",
              "text": "@notice Deposit underlying token to mint wrapped token\n @param amount Amount of underlying token to deposit"
            },
            "functionSelector": "b6b55f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1614:7:21",
            "parameters": {
              "id": 26574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26573,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1630:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26598,
                  "src": "1622:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1621:16:21"
            },
            "returnParameters": {
              "id": 26575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1645:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26623,
            "nodeType": "FunctionDefinition",
            "src": "2050:334:21",
            "nodes": [],
            "body": {
              "id": 26622,
              "nodeType": "Block",
              "src": "2091:293:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26605,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2170:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2174:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2170:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26607,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26601,
                        "src": "2182:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26604,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24582,
                      "src": "2164:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26609,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:25:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26611,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26601,
                        "src": "2252:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26610,
                      "name": "_withdrawFromStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26688,
                      "src": "2230:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 26612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26613,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:29:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26617,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2358:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2362:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2358:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26619,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26601,
                        "src": "2370:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26614,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26486,
                        "src": "2338:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24693",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 26616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2349:8:21",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24230,
                      "src": "2338:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 26620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26621,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:39:21"
                }
              ]
            },
            "documentation": {
              "id": 26599,
              "nodeType": "StructuredDocumentation",
              "src": "1929:116:21",
              "text": "@notice Withdraw underlying token by burning wrapped token\n @param amount Amount of wrapped token to burn"
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2059:8:21",
            "parameters": {
              "id": 26602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26601,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2076:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26623,
                  "src": "2068:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:16:21"
            },
            "returnParameters": {
              "id": 26603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2091:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26658,
            "nodeType": "FunctionDefinition",
            "src": "2440:264:21",
            "nodes": [],
            "body": {
              "id": 26657,
              "nodeType": "Block",
              "src": "2479:225:21",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26629,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2498:4:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26657,
                      "src": "2489:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AavePool_$26859",
                        "typeString": "contract AavePool"
                      },
                      "typeName": {
                        "id": 26628,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26627,
                          "name": "AavePool",
                          "nameLocations": [
                            "2489:8:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26859,
                          "src": "2489:8:21"
                        },
                        "referencedDeclaration": 26859,
                        "src": "2489:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AavePool_$26859",
                          "typeString": "contract AavePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26635,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26631,
                            "name": "aavePoolProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26492,
                            "src": "2514:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                              "typeString": "contract AavePoolProvider"
                            }
                          },
                          "id": 26632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2531:7:21",
                          "memberName": "getPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26866,
                          "src": "2514:24:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 26633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2514:26:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26630,
                      "name": "AavePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26859,
                      "src": "2505:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AavePool_$26859_$",
                        "typeString": "type(contract AavePool)"
                      }
                    },
                    "id": 26634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AavePool_$26859",
                      "typeString": "contract AavePool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2489:52:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26641,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26486,
                            "src": "2585:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 26640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2577:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2577:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2577:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26647,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2639:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                                  "typeString": "contract GreenWrapper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                                  "typeString": "contract GreenWrapper"
                                }
                              ],
                              "id": 26646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2631:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26645,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2631:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2631:13:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26643,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26486,
                            "src": "2610:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 26644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2621:9:21",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24205,
                          "src": "2610:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:35:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26652,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2667:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                              "typeString": "contract GreenWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                              "typeString": "contract GreenWrapper"
                            }
                          ],
                          "id": 26651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2659:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2659:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2659:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2686:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26636,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "2552:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AavePool_$26859",
                          "typeString": "contract AavePool"
                        }
                      },
                      "id": 26638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2557:6:21",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26849,
                      "src": "2552:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 26655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:145:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26656,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:145:21"
                }
              ]
            },
            "documentation": {
              "id": 26624,
              "nodeType": "StructuredDocumentation",
              "src": "2390:45:21",
              "text": "@notice Supplies underlying token to Aave"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositToStrategy",
            "nameLocation": "2449:18:21",
            "parameters": {
              "id": 26625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2467:2:21"
            },
            "returnParameters": {
              "id": 26626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2479:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26688,
            "nodeType": "FunctionDefinition",
            "src": "2824:193:21",
            "nodes": [],
            "body": {
              "id": 26687,
              "nodeType": "Block",
              "src": "2880:137:21",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26666,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2899:4:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26687,
                      "src": "2890:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AavePool_$26859",
                        "typeString": "contract AavePool"
                      },
                      "typeName": {
                        "id": 26665,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26664,
                          "name": "AavePool",
                          "nameLocations": [
                            "2890:8:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26859,
                          "src": "2890:8:21"
                        },
                        "referencedDeclaration": 26859,
                        "src": "2890:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AavePool_$26859",
                          "typeString": "contract AavePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26672,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26668,
                            "name": "aavePoolProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26492,
                            "src": "2915:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AavePoolProvider_$26867",
                              "typeString": "contract AavePoolProvider"
                            }
                          },
                          "id": 26669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2932:7:21",
                          "memberName": "getPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26866,
                          "src": "2915:24:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 26670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2915:26:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26667,
                      "name": "AavePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26859,
                      "src": "2906:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AavePool_$26859_$",
                        "typeString": "type(contract AavePool)"
                      }
                    },
                    "id": 26671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AavePool_$26859",
                      "typeString": "contract AavePool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2890:52:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26678,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26486,
                            "src": "2975:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 26677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2967:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2967:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2967:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26680,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26661,
                        "src": "2988:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26683,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3004:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                              "typeString": "contract GreenWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                              "typeString": "contract GreenWrapper"
                            }
                          ],
                          "id": 26682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2996:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2996:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2996:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26673,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26666,
                        "src": "2953:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AavePool_$26859",
                          "typeString": "contract AavePool"
                        }
                      },
                      "id": 26675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2958:8:21",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26858,
                      "src": "2953:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 26685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:57:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26686,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:57:21"
                }
              ]
            },
            "documentation": {
              "id": 26659,
              "nodeType": "StructuredDocumentation",
              "src": "2710:109:21",
              "text": "@notice Withdraws underlying token from Aave\n @param amount Amount of underlying token to withdraw"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawFromStrategy",
            "nameLocation": "2833:21:21",
            "parameters": {
              "id": 26662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26661,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2863:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26688,
                  "src": "2855:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2854:16:21"
            },
            "returnParameters": {
              "id": 26663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2880:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26721,
            "nodeType": "FunctionDefinition",
            "src": "3080:324:21",
            "nodes": [],
            "body": {
              "id": 26720,
              "nodeType": "Block",
              "src": "3115:289:21",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26693,
                      "mutability": "mutable",
                      "name": "yield",
                      "nameLocation": "3164:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26720,
                      "src": "3156:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3156:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26704,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26698,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3202:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                                "typeString": "contract GreenWrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GreenWrapper_$26817",
                                "typeString": "contract GreenWrapper"
                              }
                            ],
                            "id": 26697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3194:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26696,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3194:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3194:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 26694,
                          "name": "aUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26489,
                          "src": "3172:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24693",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 26695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3184:9:21",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24205,
                        "src": "3172:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 26700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3172:36:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26701,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24191,
                        "src": "3211:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 26702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3211:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3172:52:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3156:68:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26706,
                        "name": "yield",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "3280:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26705,
                      "name": "_withdrawFromStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26688,
                      "src": "3258:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 26707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26708,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:28:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26714,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26486,
                            "src": "3365:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$24693",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 26713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3357:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26712,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3357:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3357:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26716,
                        "name": "yield",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "3378:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26717,
                        "name": "carbonToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26497,
                        "src": "3385:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26709,
                        "name": "toucan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26495,
                        "src": "3327:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OffsetHelper_$26885",
                          "typeString": "contract OffsetHelper"
                        }
                      },
                      "id": 26711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3334:22:21",
                      "memberName": "autoOffsetExactInToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26884,
                      "src": "3327:29:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address) external returns (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 26718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:70:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "id": 26719,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:70:21"
                }
              ]
            },
            "documentation": {
              "id": 26689,
              "nodeType": "StructuredDocumentation",
              "src": "3023:52:21",
              "text": "@notice Buys carbon credits with yield from Aave"
            },
            "functionSelector": "fe839618",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyCarbonCredits",
            "nameLocation": "3089:16:21",
            "parameters": {
              "id": 26690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3105:2:21"
            },
            "returnParameters": {
              "id": 26691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3115:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26816,
            "nodeType": "FunctionDefinition",
            "src": "3410:816:21",
            "nodes": [],
            "body": {
              "id": 26815,
              "nodeType": "Block",
              "src": "3606:620:21",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 26745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 26741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26736,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26727,
                        "src": "3620:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3641:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3633:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26737,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3633:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3633:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3620:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26742,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26731,
                        "src": "3647:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 26743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3657:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3647:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3620:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26750,
                  "nodeType": "IfStatement",
                  "src": "3616:87:21",
                  "trueBody": {
                    "id": 26749,
                    "nodeType": "Block",
                    "src": "3660:43:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26746,
                            "name": "ZeroValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26503,
                            "src": "3681:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3681:11:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26748,
                        "nodeType": "RevertStatement",
                        "src": "3674:18:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26751,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26723,
                      "src": "3717:2:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 26752,
                        "name": "counters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26501,
                        "src": "3723:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 26754,
                      "indexExpression": {
                        "id": 26753,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26725,
                        "src": "3732:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3723:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3717:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26760,
                  "nodeType": "IfStatement",
                  "src": "3713:76:21",
                  "trueBody": {
                    "id": 26759,
                    "nodeType": "Block",
                    "src": "3739:50:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26756,
                            "name": "AlreadyProcessed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26505,
                            "src": "3760:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3760:18:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26758,
                        "nodeType": "RevertStatement",
                        "src": "3753:25:21"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    26762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26762,
                      "mutability": "mutable",
                      "name": "messageHash",
                      "nameLocation": "3807:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26815,
                      "src": "3799:19:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 26761,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3799:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26773,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26766,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26723,
                            "src": "3861:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 26767,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26725,
                            "src": "3865:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26768,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26727,
                            "src": "3871:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26769,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26729,
                            "src": "3882:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26770,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26731,
                            "src": "3889:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 26764,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3844:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3848:12:21",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3844:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3844:52:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26763,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3821:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 26772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:85:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3799:107:21"
                },
                {
                  "assignments": [
                    26775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26775,
                      "mutability": "mutable",
                      "name": "signedMessage",
                      "nameLocation": "3924:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26815,
                      "src": "3916:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 26774,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3916:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26780,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26778,
                        "name": "messageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26762,
                        "src": "3969:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 26776,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25413,
                        "src": "3940:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$25413_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 26777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3946:22:21",
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25358,
                      "src": "3940:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 26779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3940:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3916:65:21"
                },
                {
                  "assignments": [
                    26782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26782,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "3999:6:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 26815,
                      "src": "3991:14:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26781,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3991:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26785,
                        "name": "signedMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26775,
                        "src": "4022:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 26786,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26733,
                        "src": "4037:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 26783,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25413,
                        "src": "4008:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$25413_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 26784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4014:7:21",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25174,
                      "src": "4008:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 26787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4008:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3991:56:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 26791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26789,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26782,
                      "src": "4062:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 26790,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26725,
                      "src": "4072:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4062:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26796,
                  "nodeType": "IfStatement",
                  "src": "4058:65:21",
                  "trueBody": {
                    "id": 26795,
                    "nodeType": "Block",
                    "src": "4078:45:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26792,
                            "name": "WrongSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26507,
                            "src": "4099:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4099:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26794,
                        "nodeType": "RevertStatement",
                        "src": "4092:20:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 26805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26797,
                        "name": "counters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26501,
                        "src": "4133:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 26799,
                      "indexExpression": {
                        "id": 26798,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26725,
                        "src": "4142:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4133:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 26800,
                          "name": "counters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26501,
                          "src": "4150:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 26802,
                        "indexExpression": {
                          "id": 26801,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26725,
                          "src": "4159:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4150:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 26803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4167:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4150:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4133:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26806,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:35:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26811,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26727,
                        "src": "4201:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26812,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26731,
                        "src": "4212:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26808,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26729,
                            "src": "4185:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26807,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24693,
                          "src": "4179:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$24693_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 26809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4179:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24693",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 26810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4192:8:21",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24230,
                      "src": "4179:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 26813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4179:40:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26814,
                  "nodeType": "ExpressionStatement",
                  "src": "4179:40:21"
                }
              ]
            },
            "functionSelector": "75311fc6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferWithSignature",
            "nameLocation": "3419:21:21",
            "parameters": {
              "id": 26734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26723,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3458:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26816,
                  "src": "3450:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26725,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3478:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26816,
                  "src": "3470:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26727,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3500:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26816,
                  "src": "3492:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26729,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3527:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26816,
                  "src": "3519:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3519:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26731,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3550:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26816,
                  "src": "3542:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26733,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "3581:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 26816,
                  "src": "3566:24:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26732,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3440:156:21"
            },
            "returnParameters": {
              "id": 26735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3606:0:21"
            },
            "scope": 26817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26480,
              "name": "ERC20",
              "nameLocations": [
                "531:5:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24693,
              "src": "531:5:21"
            },
            "id": 26481,
            "nodeType": "InheritanceSpecifier",
            "src": "531:5:21"
          }
        ],
        "canonicalName": "GreenWrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 26479,
          "nodeType": "StructuredDocumentation",
          "src": "369:137:21",
          "text": "@title A Green Wrapper for ERC20 tokens\n @notice Use this contract to wrap ERC20 tokens whose yield is used to buy carbon credits"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26817,
          24693,
          24796,
          24771,
          24818
        ],
        "name": "GreenWrapper",
        "nameLocation": "515:12:21",
        "scope": 26818,
        "usedErrors": [
          26503,
          26505,
          26507
        ],
        "usedEvents": [
          24705,
          24714
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 21
}
